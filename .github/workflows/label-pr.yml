name: Label Pull Request

on:
  pull_request:

jobs:
  label-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check PR title for labels
        id: check-title
        run: |
          if [[ "${{ github.event.pull_request.title }}" == *"skill"* ]]; then
            echo "title_label=skill" >> $GITHUB_ENV
          elif [[ "${{ github.event.pull_request.title }}" == *"knowledge"* ]]; then
            echo "title_label=knowledge" >> $GITHUB_ENV
          fi

      - name: Check commit messages for labels
        id: check-commits
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const octokit = github.getOctokit(core.getInput('github-token'));
            const commits = await octokit.rest.pulls.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            
            let skillCommit = false;
            let knowledgeCommit = false;
            
            commits.data.forEach(commit => {
              if (commit.commit.message.includes('skill')) {
                skillCommit = true;
              }
              if (commit.commit.message.includes('knowledge')) {
                knowledgeCommit = true;
              }
            });
            
            if (skillCommit) {
              core.exportVariable('commit_label', 'skill');
            } else if (knowledgeCommit) {
              core.exportVariable('commit_label', 'knowledge');
            }

      - name: Apply labels
        uses: actions/github-script@v6
        if: env.title_label || env.commit_label
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const labels = [];
            if (process.env.title_label) {
              labels.push(process.env.title_label);
            }
            if (process.env.commit_label) {
              labels.push(process.env.commit_label);
            }
            if (labels.length > 0) {
              const octokit = github.getOctokit(core.getInput('github-token'));
              await octokit.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: labels
              });
            }
